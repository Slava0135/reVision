version = '1.0'

buildscript{
    repositories{
        mavenCentral()
    }

    ext{
        kotlinVersion = "1.7.20"
        //the build number that this mod is made for
        mindustryVersion = 'v146'
        //version of SDK you will be using
        sdkVersion = '30'
        sdkRoot = System.getenv("ANDROID_HOME")

        doExec = { cmd ->
            def proc = cmd.execute(null, new File("$rootProject.layout.buildDirectory/libs"))
            proc.waitForProcessOutput(System.out, System.err)
        }
    }

    dependencies{
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: "kotlin"

sourceSets.main.kotlin.srcDirs = ["src"]

repositories{
    mavenCentral()
    maven{ url = "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven{ url = 'https://www.jitpack.io' }
}

dependencies{
    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindustryVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
}

tasks.register('jarAndroid') {
    dependsOn "jar"

    doLast {
        //collect dependencies needed for desugaring
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect { "--classpath $it.path" }.join(" ")

        //dex and desugar files - this requires d8 in your PATH
        doExec("d8 $dependencies --min-api 14 --output ${project.rootProject.layout.buildDirectory}Android.jar ${project.rootProject.layout.buildDirectory}Desktop.jar")
    }
}

jar{
    archiveFileName = "${project.rootProject.layout.buildDirectory}Desktop.jar"

    from{
        configurations.runtimeClasspath.collect{ it.isDirectory() ? it : zipTree(it) }
    }

    from(rootDir){
        include "mod.hjson"
    }

    from("assets/"){
        include "**"
    }
}

tasks.register('deploy', Jar) {
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "${project.archivesBaseName}.jar"

    from { [zipTree("$rootProject.layout.buildDirectory/libs/${project.archivesBaseName}Desktop.jar"), zipTree("$rootProject.layout.buildDirectory/libs/${project.archivesBaseName}Android.jar")] }

    doLast {
        delete { delete "$rootProject.layout.buildDirectory/libs/${project.archivesBaseName}Desktop.jar" }
        delete { delete "$rootProject.layout.buildDirectory/libs/${project.archivesBaseName}Android.jar" }
    }
}
